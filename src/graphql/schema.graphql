type Query {
  albums(input: GetAlbumsResults!): [Album]
  album(input: GetAlbum): Album
}

type Mutation {
  addToCollection(input: AddCollection): User
}

type User {
  id: ID
  email: String!
  collections: [Album!]
  profilePic: String
}

type Album {
  id: ID!
  title: String!
  genre: [String!]
  year: Int
  image: String
  artist: Artist
  owned: Boolean!
  format: [String]
  trackList: [TrackList]
  country: String
}

type Artist {
  id: ID!
  name: String!
  description: String
  albums: [Album]
  image: String
}


type TrackList {
  title: String!
  duration: String!
  position: String
}

input GetAlbumsResults {
  query: String!
}

input GetAlbum {
  id: ID!
}

input AddCollection {
  id: ID!
  title: String!
  image: String!
}